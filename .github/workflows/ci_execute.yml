name: 01-CとC++ビルドCI (Docker版)

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: [self-hosted, ubuntu]
    container:
      image: ghcr.io/sinsan0209/devops-ci-image:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --volume /home/ubuntu/workspace/devops:/mnt/devops

    steps:
      - name: "Step0: 環境の確認"
        run: |
          echo "::group::🧭 OS情報"
          uname -a
          cat /etc/os-release
          echo "::endgroup::"

          echo "::group::🛠️ ツールバージョン"
          gcc --version
          g++ --version
          bazel --version
          echo "::endgroup::"

      - name: "Step1: リポジトリをチェックアウト!"
        uses: actions/checkout@v4

      - name: "Step2: シェルスクリプトを実行（test.sh）"
        run: ./scripts/test.sh

      - name: "Step3: ビルドディレクトリ作成"
        run: mkdir -p build

      - name: "Step4: Cコードをビルド（hello.c）"
        run: gcc -o build/hello src/hello.c

      - name: "Step5: C成果物を実行"
        run: ./build/hello

      - name: "Step6: C++コードをビルド（hello.cpp）"
        run: g++ -o build/hello_cpp src/hello.cpp

      - name: "Step7: C++成果物を実行"
        run: ./build/hello_cpp

      - name: "Step8: Bazelビルド（hello）"
        run: |
          export USER=ubuntu
          cd bazel_sample
          bazel build //main:hello

      - name: "Step9: Bazel成果物を実行"
        run: |
          export USER=ubuntu
          cd bazel_sample
          ./bazel-bin/main/hello

      - name: "Step10: Bazelでテスト実行"
        run: |
          export USER=ubuntu
          cd bazel_sample
          bazel test --test_output=all //main:hello_test

      - name: "Step11: 成果物をホストにデプロイ"
        if: success()
        run: |
          mkdir -p /mnt/devops/artifacts
          cp bazel_sample/bazel-bin/main/hello /mnt/devops/artifacts/
          cp build/hello /mnt/devops/artifacts/
          cp build/hello_cpp /mnt/devops/artifacts/
          echo "✅ ホストの ~/workspace/devops/artifacts に成果物を出力しました"

      - name: "Step11-fail: テスト失敗のためデプロイをスキップ"
        if: failure()
        run: echo "❌ テストが失敗したため、デプロイはスキップされました"

      - name: "Step12: Bazelキャッシュをクリーン（最後に）"
        run: |
          export USER=ubuntu
          cd bazel_sample
          bazel clean

      - name: "Step13: 成果物をアーティファクトとして保存"
        uses: actions/upload-artifact@v4
        with:
          name: built-hello-binaries
          path: |
            build/hello
            build/hello_cpp
            bazel_sample/bazel-bin/main/hello

      - name: "Step14: 完了メッセージ"
        run: |
          echo "::group::🚀 完了メッセージ"
          echo "🎉 全ビルドとテストが完了しました。アーティファクトも保存済みです。"
          echo "::endgroup::"

name: 01-CとC++ビルドCI (Docker手動起動版)

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: [self-hosted, home-runner]

    steps:
      - name: "Step1: リポジトリをチェックアウト"
        uses: actions/checkout@v4

      - name: "Step2: Dockerコンテナ内でビルド一式を実行"
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            ghcr.io/sinsan0209/devops-ci-image:latest \
            bash -c '
              echo "::group::🧭 OS情報"
              uname -a
              cat /etc/os-release
              echo "::endgroup::"

              echo "::group::🛠️ ツールバージョン"
              gcc --version
              g++ --version
              bazel --version
              echo "::endgroup::"

              ./scripts/test.sh

              mkdir -p build

              gcc -o build/hello src/hello.c
              ./build/hello

              g++ -o build/hello_cpp src/hello.cpp
              ./build/hello_cpp

              cd bazel_sample
              bazel build //main:hello
              ./bazel-bin/main/hello
              bazel test --test_output=all //main:hello_test

              if [ $? -eq 0 ]; then
                mkdir -p /workspace/deploy_area
                cp bazel-bin/main/hello /workspace/deploy_area/
                echo "✅ 成果物を deploy_area にコピー完了"
              else
                echo "❌ テスト失敗、デプロイスキップ"
              fi

              bazel clean
            '

      - name: "Step3: 成果物をアーティファクトとして保存"
        uses: actions/upload-artifact@v4
        with:
          name: built-hello-binaries
          path: |
            build/hello
            build/hello_cpp
            deploy_area/hello

      - name: "Step4: 完了メッセージ"
        run: |
          echo "::group::🚀 完了メッセージ"
          echo "🎉 全ビルドとテストが完了しました。アーティファクトも保存済みです。"
          echo "::endgroup::"
